import { pascalCase } from '../../utils/helpers.js';
import { Box, Text } from 'ink';
import React from 'react';
import Errors from './Errors.js';
import TreeView from './Tree.js';
import Warnings from './Warnings.js';
const Summary = ({ dataList, data }) => (React.createElement(Box, { flexDirection: 'column' },
    React.createElement(Box, { borderStyle: 'double', borderColor: 'red', alignItems: 'center', justifyContent: 'center' },
        React.createElement(Text, { color: 'red', bold: true }, "Welcome to Compilot-cli")),
    React.createElement(Box, { flexDirection: 'column' }, dataList.map((item, index) => (React.createElement(Box, { key: index, flexDirection: 'column' },
        item.type ? (React.createElement(Text, null,
            "\uD83E\uDDE9 [Type]: ",
            React.createElement(Text, { color: 'red' }, item.type))) : null,
        item.name ? (React.createElement(Text, null,
            "\uD83D\uDCDD [Name]: ",
            React.createElement(Text, { color: 'red' }, item.name))) : null,
        item.http ? (React.createElement(Text, null,
            "\uD83D\uDD0C [HTTP]: ",
            React.createElement(Text, { color: 'red' }, item.http))) : null,
        item.folder ? (React.createElement(Text, null,
            "\uD83D\uDCC1 [Folder]: ",
            React.createElement(Text, { color: 'red' }, item.folder))) : null,
        item.changes?.length ? (React.createElement(Box, { alignItems: 'center', justifyContent: 'center' },
            React.createElement(TreeView, { files: item.changes }))) : null,
        item.warnings?.length ? (React.createElement(Box, { alignItems: 'center', justifyContent: 'center' },
            React.createElement(Warnings, { files: item.warnings }))) : null,
        item.errors?.length ? (React.createElement(Box, { alignItems: 'center', justifyContent: 'center' },
            React.createElement(Errors, { files: item.errors }))) : null,
        React.createElement(Box, { width: 50, borderStyle: 'round', flexDirection: 'row', alignItems: 'center', justifyContent: 'center' },
            React.createElement(Text, null,
                "\uD83D\uDE80 ",
                pascalCase(item.type),
                " ",
                item.name,
                " Created \uD83D\uDE80")))))),
    React.createElement(Box, { flexDirection: 'column' },
        data.type ? (React.createElement(Text, null,
            "\uD83E\uDDE9 [Type]: ",
            React.createElement(Text, { color: 'red' }, data.type))) : null,
        data.name ? (React.createElement(Text, null,
            "\uD83D\uDCDD [Name]: ",
            React.createElement(Text, { color: 'red' }, data.name))) : null,
        data.http ? (React.createElement(Text, null,
            "\uD83D\uDD0C [HTTP]: ",
            React.createElement(Text, { color: 'red' }, data.http))) : null,
        data.folder ? (React.createElement(Text, null,
            "\uD83D\uDCC1 [Folder]: ",
            React.createElement(Text, { color: 'red' }, data.folder))) : null)));
export default Summary;
